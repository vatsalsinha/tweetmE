{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","followers_count","following_count","aria-hidden","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newtweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","didTweet","textAreaRef","React","createRef","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","newTweet","TweetsComponent","canTweet","setNewTweets","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetFeedEl","dataset","tweetsEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ab5b8b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403){\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    let endpoint = \"/tweets/\"\r\n    if (tweetId){\r\n        endpoint = `/tweets/${tweetId}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action,  callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action\", callback, data)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && (didPerformAction)){\r\n        // setLikes(response.likes)\r\n        didPerformAction(response, status)\r\n      //  setUserLike(true)\r\n      }\r\n      // if (action.type === 'like') {\r\n      //   if (userLike === true) {\r\n      //     // perhaps i Unlike it?\r\n      //     setLikes(likes - 1)\r\n      //     setUserLike(false)\r\n      //   } else {\r\n      //     setLikes(likes + 1)\r\n      //     setUserLike(true)\r\n      //   }\r\n        \r\n      // }\r\n    }\r\n    \r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }\r\n","import React from 'react'\r\n\r\nexport function UserLink(props){\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n      window.location.href = `/profile/${username}`\r\n    }\r\n    return (\r\n      <span className = 'pointer' onClick = {handleUserLink}>\r\n        {props.children}\r\n      </span>\r\n    )\r\n  }\r\n  \r\nexport function UserDisplay(props){\r\n    const {user, includeFullName, hideLink} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\r\n    return (\r\n      <React.Fragment>\r\n        {nameDisplay}{' '}\r\n        {hideLink === true ? `@${user.username}` : <UserLink username = {user.username} >\r\n          @{user.username}{' '} \r\n          <span className = 'small text-muted'>\r\n            <br/>\r\n            {user.followers_count} followers {\" \"} {user.following_count} following\r\n            <br/>\r\n            <span className=\"glyphicon glyphicon-map-marker\" aria-hidden=\"true\">{user.location}</span>\r\n            <br />\r\n          </span>\r\n        </UserLink>}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  \r\nexport function UserPicture(props){\r\n    const {user, hideLink} = props\r\n    const userIdSpan =  <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n    {user.username[0]}\r\n  </span>\r\n    return  hideLink === true ? userIdSpan : <UserLink username = {user.username} > {userIdSpan}</UserLink>\r\n  }","import React, {useEffect, useState} from 'react'\r\nimport numeral from 'numeral'\r\n\r\nexport function DisplayCount(props){\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n  }","import React, {useEffect, useState} from 'react'\r\nimport {UserDisplay, UserPicture} from './components'\r\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\r\nimport {DisplayCount} from './utils';\r\n\r\n\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\r\n        <p><DisplayCount>{user.followers_count}</DisplayCount> {user.followers_count === 1 ? 'Follower':'Followers'}</p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> Following</p>\r\n        <p><span className = 'text-muted'>location: </span>{user.location}</p>\r\n        <p><span className = 'text-muted'>bio:</span> {user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n    const {username} = props\r\n    // lookup\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setProfile(response)\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      if (didLookup === false){\r\n        apiProfileDetail(username, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\r\n            console.log(response, status)\r\n            if (status===200) {\r\n                setProfile(response)\r\n                // apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n        \r\n    }\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}","import React from 'react';\r\nimport {backendLookup} from '../lookup';\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\r\n}","import React, {useState}  from 'react'\r\nimport {ActionBtn} from './buttons'\r\nimport {UserLink, UserDisplay, UserPicture} from '../profiles';\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return (\r\n      tweet.parent ? <Tweet isRetweet retweeter = {props.retweeter} hideActions className={' '} tweet= {tweet.parent} />  : null\r\n    )\r\n  }\r\n    \r\n  export function Tweet(props) {\r\n      const tweet = props.tweet // same as const {tweet} = props.tweet\r\n      const didRetweet = props.didRetweet\r\n      const hideActions = props.hideActions\r\n      const isRetweet = props.isRetweet\r\n      const retweeter = props.retweeter\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} p-2 border rounded` : className \r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1          \r\n      const isDetail = `${tweet.id}` === `${urlTweetId}` \r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        }else if(status === 201){\r\n          //let the tweet list know\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n      }\r\n      return( \r\n        <div className={className}>\r\n            {isRetweet === true && <div className = 'mb-2'> <span className = 'small text-muted'>Retweeted from <UserDisplay user = {tweet.user}/></span> </div>}\r\n             <div className='d-flex'>\r\n              <div className=''>\r\n               <UserPicture user = {tweet.user} />\r\n              </div>\r\n              <div className='col-11'>\r\n                <div>\r\n                  <p>\r\n                  <UserDisplay user = {tweet.user} includeFullName = {true} />\r\n                  </p>\r\n                  <p>{tweet.content}</p>\r\n                  <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n                </div>\r\n                <div className='btn btn-group px-0'>\r\n                  {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                  </React.Fragment>\r\n                  }\r\n                {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n             </div>\r\n            </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n    ","import React, {useEffect, useState}  from 'react'\r\nimport {Tweet} from './detail'\r\n\r\nimport {apiTweetList} from './lookup'\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n    const handleDidRetweet = (newtweet) => {\r\n         const updateTweetsInit = [...tweetsInit]\r\n         updateTweetsInit.unshift(newtweet)\r\n         setTweetsInit(updateTweetsInit)\r\n         const updateFinalTweets = [...tweets]\r\n         updateFinalTweets.unshift(tweets)\r\n         setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment> {tweets.map((item, index)=>{\r\n      return <Tweet tweet={item} didRetweet = {handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick = {handleLoadNext} className = 'btn btn-outline-primary'>Next</button>}\r\n    </React.Fragment>\r\n  }\r\n","import React  from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props){ \r\n    const {didTweet} = props\r\n    const textAreaRef = React.createRef()\r\n    const handleBackendUpdate = (response, status) => {\r\n      console.log(response, status)\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // change this to a server side call\r\n      apiTweetCreate(newVal, handleBackendUpdate) \r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n              <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n          </div>           \r\n}","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n","import React, {useState, useEffect}  from 'react'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {FeedList} from './feed'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const canTweet = props.canTweet === \"false\" ? false:true\r\n  const {username} = props\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const handleNewTweet = (response, status) => {\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(response)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet = {handleNewTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const tweetId = props.tweetId\r\n  const [tweet, setTweet] = useState(null)\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200){\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error while fetching the tweet\")\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet= {tweet} className = {props.className}/>\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ProfileBadgeComponent} from './profiles';\nimport {TweetsComponent, TweetDetailComponent, FeedComponent} from './tweets';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(<App />, appEl)\n}\n\nconst e = React.createElement\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif(tweetFeedEl){\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl)\n}\n\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif(tweetsEl){\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl)\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), \n        container);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}